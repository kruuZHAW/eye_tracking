syntax = "proto3";

package tern.protobuf.aircraftPerformance;

import "aircraftPerformanceEditorOptions.proto";

enum EngineType {
   ENGINE_TYPE_NOT_SET = 0;
   JET = 1;
   TURBOPROP = 2;
   PISTON = 3;
   ELECTRIC = 4;
}

enum WakeCategory {
   WAKE_CATEGORY_NOT_SET = 0;
   J = 1;
   H = 2;
   M = 3;
   L = 4;
}

enum ConfigurationName {
   CONFIGURATION_NOT_SET = 0;
   CLEAN = 1;
   INITIAL_CLIMB = 2;
   TAKE_OFF = 3;
   APPROACH = 4;
   LANDING = 5;
}

// Stall speed and drag coefficients for the different configurations
message ConfigurationAerodynamics {
   ConfigurationName name = 1 [(label) = "Name of the configuration"];
   double stall_speed = 2 [(label) = "Stall speed", (unit) = "KCAS"];
   double c_d0 = 3 [(label) = "Parasitic drag coefficient"];
   double c_d2 = 4 [(label) = "Induced drag coefficient"];
}

message SpeedSchedule {
   double standard_cas_below_10000_feet = 1 [(label) = "Standard CAS below 10,000 ft", (unit) = "KCAS"];
   double standard_cas_above_10000_feet = 2 [(label) = "Standard CAS between 10,000 ft and Mach transition altitude", (unit) = "KCAS"];
   double standard_mach_number = 3 [(label) = "Standard Mach number above Mach transition altitude", (unit) = "Mach"];
}

message AirlineProcedureDefaultSpeeds {
   SpeedSchedule scheduled_climb_speeds = 1 [(label) = "Standard climb speeds"];
   SpeedSchedule scheduled_cruise_speeds = 2 [(label) = "Standard cruise speeds"];
   SpeedSchedule scheduled_descent_speeds = 3 [(label) = "Standard descent speeds"];
}

message MaximumAccelerationGlobalParameters{
   double civil_max_long_acc = 1 [(label) = "Maximum longitudinal acceleration for civil flights", (unit) = "ft/s^2"];
   double civil_max_norm_acc = 2 [(label) = "Maximum normal acceleration for civil flights", (unit) = "ft/s^2"];
   double military_max_long_acc = 3 [(label) = "Maximum longitudinal acceleration for military flights", (unit) = "ft/s^2"];
   double military_max_norm_acc = 4 [(label) = "Maximum normal acceleration for military flights", (unit) = "ft/s^2"];
}

message DragGlobalParameters {
   double nominal_bank_angle_civil_to_ld = 1 [(label) = "Nominal bank angles for civil flight during TO and LD", (unit) = "degrees"];
   double nominal_bank_angle_civil_other = 2 [(label) = "Nominal bank angles for civil flight during all other phases", (unit) = "degrees"];
   double nominal_bank_angle_military = 3 [(label) = "Nominal bank angles for military flight (all phases)", (unit) = "degrees"];
   double maximum_bank_angle_civil_to_ld = 4 [(label) = "Maximum bank angles for civil flight during TO and LD", (unit) = "degrees"];
   double maximum_bank_angle_civil_holding = 5 [(label) = "Maximum bank angles for civil flight during HOLD", (unit) = "degrees"];
   double maximum_bank_angle_civil_other = 6 [(label) = "Maximum bank angles for civil flight during all other phases", (unit) = "degrees"];
   double maximum_bank_angle_military = 7 [(label) = "Maximum bank angles for military flight (all phases)", (unit) = "degrees"];
   double expedited_descent_factor = 8 [(label) = "Expedited descent factor"];
}

message ThrustGlobalParameters {
   double take_off_thrust_coeff = 1 [(label) = "Take-off thrust coefficient"];
   double max_cruise_thrust_coeff = 2 [(label) = "Maximum cruise thrust coefficient"];
}

message ConfigurationAltitudeGlobalThresholds {
   double take_off_threshold = 1 [(label) = "Maximum altitude threshold for take-off", (unit) = "ft"];
   double initial_climb_threshold = 2 [(label) = "Maximum altitude threshold for initial climb", (unit) = "ft"];
   double approach_threshold = 3 [(label) = "Maximum altitude threshold for approach", (unit) = "ft"];
   double landing_threshold = 4 [(label) = "Maximum altitude threshold for landing", (unit) = "ft"];
}

message SpeedScheduleGlobalParameters {
   double min_speed_coeff_takeoff = 1 [(label) = "Minimum speed coefficient for take-off"];
   double min_speed_coeff_others = 2 [(label) = "Minimum speed coefficient (all other phases)"];
   double climb_increment_1_jet = 3 [(label) = "Climb speed increment below 1500 ft (jet)", (unit) = "KCAS"];
   double climb_increment_2_jet = 4 [(label) = "Climb speed increment below 3000 ft (jet)", (unit) = "KCAS"];
   double climb_increment_3_jet = 5 [(label) = "Climb speed increment below 4000 ft (jet)", (unit) = "KCAS"];
   double climb_increment_4_jet = 6 [(label) = "Climb speed increment below 5000 ft (jet)", (unit) = "KCAS"];
   double climb_increment_5_jet = 7 [(label) = "Climb speed increment below 6000 ft (jet)", (unit) = "KCAS"];
   double climb_increment_6_turbo_piston = 8 [(label) = "Climb speed increment below 500 ft (turbo/piston)", (unit) = "KCAS"];
   double climb_increment_7_turbo_piston = 9 [(label) = "Climb speed increment below 1000 ft (turbo/piston)", (unit) = "KCAS"];
   double climb_increment_8_turbo_piston = 10 [(label) = "Climb speed increment below 1500 ft (turbo/piston)", (unit) = "KCAS"];
   double descent_increment_1_jet_turbo = 11 [(label) = "Descent speed increment below 1000 ft (jet/turboprop)", (unit) = "KCAS"];
   double descent_increment_2_jet_turbo = 12 [(label) = "Descent speed increment below 1500 ft (jet/turboprop)", (unit) = "KCAS"];
   double descent_increment_3_jet_turbo = 13 [(label) = "Descent speed increment below 2000 ft (jet/turboprop)", (unit) = "KCAS"];
   double descent_increment_4_jet_turbo = 14 [(label) = "Descent speed increment below 3000 ft (jet/turboprop)", (unit) = "KCAS"];
   double descent_increment_5_piston = 15 [(label) = "Descent speed increment below 500 ft (piston)", (unit) = "KCAS"];
   double descent_increment_6_piston = 16 [(label) = "Descent speed increment below 1000 ft (piston)", (unit) = "KCAS"];
   double descent_increment_7_piston = 17 [(label) = "Descent speed increment below 1500 ft (piston)", (unit) = "KCAS"];
}

message HoldingSpeedGlobalParameters {
   double holding_speed_below_FL140 = 1 [(label) = "Holding speed below FL140", (unit) = "KCAS"];
   double holding_speed_between_FL140_and_FL200 = 2 [(label) = "Holding speed between FL140 and FL200", (unit) = "KCAS"];
   double holding_speed_between_FL200_and_FL340 = 3 [(label) = "Holding speed between FL200 and FL340", (unit) = "KCAS"];
   double holding_speed_above_FL340 = 4 [(label) = "Holding speed above FL340", (unit) = "Mach"];
}

message GroundSpeedGlobalParameters {
   double runway_backtrack_speed = 1 [(label) = "Runway backtrack speed", (unit) = "KCAS"];
   double taxi_speed = 2 [(label) = "Taxi speed", (unit) = "KCAS"];
   double apron_speed = 3 [(label) = "Apron speed", (unit) = "KCAS"];
   double gate_speed = 4 [(label) = "Gate speed", (unit) = "KCAS"];
}

message EngineReducedPowerCoefficient {
   EngineType type = 1 [(label) = "Engine type"];
   double maximum_reduction = 2 [(label) = "Maximum reduction in power"];
}

// Aircraft performance data stored in OPF file
message AircraftPerformance {
   // Aircraft type
   string icao_designator = 1 [(label) = "ICAO aircraft code"];  // six characters, padded with _ at the end
   int32 number_of_engines = 2 [(label) = "Number of engines"];
   EngineType engine_type = 3 [(label) = "Engine type"];
   WakeCategory wake_category = 4 [(label) = "Wake category"];

   // Mass (t)
   double reference_mass = 5 [(label) = "Reference mass", (unit) = "t"];
   double minimum_mass = 6 [(label) = "Minimum mass", (unit) = "t"];
   double maximum_mass = 7 [(label) = "Maximum mass", (unit) = "t"];
   double maximum_payload_mass = 8 [(label) = "Maximum payload mass", (unit) = "t"];
   double mass_gradient = 9 [(label) = "Mass gradient at maximum altitude", (unit) = "ft/kg"];

   // Flight envelope
   double max_operating_speed = 10 [(label) = "Maximum operating speed", (unit) = "KCAS"];
   double max_operating_mach = 11 [(label) = "Maximum operational Mach number", (unit) = "Mach"]; // Mach
   double max_operating_altitude = 12 [(label) = "Maximum operating altitude above standard MSL", (unit) = "ft"];
   double maximum_altitude = 13 [(label) = "Maximum altitude above standard MSL at MTOW under ISA conditions", (unit) = "ft"];
   double temperature_gradient = 14 [(label) = "Temperature gradient on maximum altitude", (unit) = "ft/K"];

   // Aerodynamics
   double wing_surface_area = 15 [(label) = "Reference wing surface area", (unit) = "m^2"];
   double buffet_lift_coefficient = 16 [(label) = "Buffet onset lift coefficient (jet only)"];
   double buffeting_gradient = 17 [(label) = "Buffeting gradient (jet only)"];
   repeated ConfigurationAerodynamics configuration_aerodynamics_list = 18 [(label) = "List of aerodynamics parameters per configuration"];
   // Drag increment (spoiler and brakes are not used, but included for compatibility with previous Bada models)
   double c_d_increase_due_to_gear_down = 19 [(label) = "Drag increment for landing gear down"];

   // Engine thrust
   // maximum climb thrust coefficients
   double c_tc_1 = 20 [(label) = "1st max. climb thrust coefficient"];
   double c_tc_2 = 21 [(label) = "2nd max. climb thrust coefficient"];
   double c_tc_3 = 22 [(label) = "3rd max. climb thrust coefficient"];
   double c_tc_4 = 23 [(label) = "1st thrust temperature coefficient", (unit) = "K"];
   double c_tc_5 = 24 [(label) = "2nd thrust temperature coefficient", (unit) = "1/K"];
   // cruise and descent thrust
   double c_tdes_low = 25 [(label) = "Low altitude descent thrust coefficient"];
   double c_tdes_high = 26 [(label) = "High altitude descent thrust coefficient"];
   double transition_altitude = 27 [(label) = "Transition altitude for calculation of descent thrust", (unit) = "ft"];
   double c_tdes_app = 28 [(label) = "Approach thrust coefficient"];
   double c_tdes_ld = 29 [(label) = "Landing thrust coefficient"];
   // reference speed during descent (unused)
   double reference_descent_speed = 30 [(label) = "Reference descent speed", (unit) = "KCAS"];
   double reference_descent_mach = 31 [(label) = "Reference descent Mach number", (unit) = "KCAS"];

   // Fuel consumption
   // thrust specific fuel consumption coefficients
   double c_f1 = 32 [(label) = "1st thrust specific fuel consumption coefficient"];
   double c_f2 = 33 [(label) = "2nd thrust specific fuel consumption coefficient", (unit) = "knots"];
   // descent fuel flow coefficients
   double c_f3 = 34 [(label) = "1st descent fuel flow coefficient", (unit) = "kg/min"];
   double c_f4 = 35 [(label) = "2nd descent fuel flow coefficient", (unit) = "ft"];
   // cruise fuel flow correction factor
   double c_fcr = 36 [(label) = "Cruise fuel flow correction coefficient"];

   // Ground movement
   double take_off_length = 37 [(label) = "Take-off length", (unit) = "m"];
   double landing_length = 38 [(label) = "Landing length", (unit) = "m"];
   double wingspan = 39 [(label) = "Wingspan", (unit) = "m"];
   double aircraft_length = 40 [(label) = "Length", (unit) = "m"];

   double runway_acceleration_metres_per_second = 41 [(label) = "Runway Take-Off Acceleration", (unit) = "m/s^2"];
   double runway_deceleration_metres_per_second = 42 [(label) = "Runway Landing Braking", (unit) = "m/s^2"];

   // Airline procedures
   AirlineProcedureDefaultSpeeds airline_procedure_default_speeds = 43 [(label) = "Airline procedure default speeds for climb and descent"];

   // Global parameters
   MaximumAccelerationGlobalParameters max_acc_global_parameters = 44 [(label) = "Global maximum acceleration parameters for civil and military flights"];
   DragGlobalParameters drag_global_parameters = 45 [(label) = "Global parameters used to calculate drag"];
   ThrustGlobalParameters thrust_global_parameters = 46 [(label) = "Global parameters used to calculate engine thrust"];
   ConfigurationAltitudeGlobalThresholds configuration_altitude_thresholds = 47 [(label) = "Maximum altitude thresholds for the different configurations"];
   SpeedScheduleGlobalParameters speed_schedule_global_parameters = 48 [(label) = "Global parameters for calculating speed schedules in climb and descent"];
   HoldingSpeedGlobalParameters holding_speed_global_parameters = 49 [(label) = "Global holding speeds"];
   GroundSpeedGlobalParameters ground_speed_global_parameters = 50 [(label) = "Global ground speeds"];
   repeated EngineReducedPowerCoefficient reduced_power_coeff_list = 51 [(label) = "List of maximum power reduction coefficients per engine type"];
}

// Aircraft data stored in the SYNONYM.NEW file
message AircraftSynonymMapInformation {
   string commercial_name = 1;
   string manufacturer_name = 2;
   string mapped_icao_designator = 3;
}

// The message describing the list of original aircraft performance and synonyms mapping
message ListOfAircraftPerformanceAndSynonymsMap {
   // The list of original aircraft performance
   repeated AircraftPerformance list_of_aircraft_performance = 1;
   // The list of mapping from synonym to original ICAO designator
   map < string, AircraftSynonymMapInformation > icao_designator_synonym_map = 2;
}

// Message to add a new aircraft performance to the dataset
message NewAircraftPerformance {
   string commercial_name = 1;
   string manufacturer_name = 2;
   AircraftPerformance aircraft_performance = 3;
}

// Message to alter aircraft performance dataset
message AlterAircraftPerformance {
   string icao_designator = 1;
   oneof alterAircraftPerformance {
      string original_aircraft_performance = 2 [deprecated=true];
      WakeCategory wake_category = 3;
      NewAircraftPerformance new_aircraft_performance = 4;
      AircraftSynonymMapInformation mapped_aircraft_performance = 5;
   }
}

// List of alteration aircraft performance messages
message ListOfAircraftPerformanceAlteration {
   repeated AlterAircraftPerformance alter_aircraft_performance = 1;
}
