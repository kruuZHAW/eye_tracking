syntax = "proto3";

import "math.proto";
import "flight.proto";
import "geometry.proto";
import "google/protobuf/timestamp.proto";
import "sectorCrossing.proto";
import "uuid.proto";

package tern.protobuf.trajectory;

// Point Of Interest
message PointOfInterest
{
  tern.protobuf.flight.ExpandedRouteElement expanded_route_element = 1;
  tern.protobuf.math.LatLon latlon = 2;
  google.protobuf.Timestamp date_time = 3;
  PointOfInterestType type = 4;
  SectorCrossingIds crossed_sector_ids = 5;
  tern.protobuf.math.geometry.VerticalVariant vertical_variant = 6;
}

message SectorCrossingIds
{
  tern.protobuf.Uuid exited_sector_id = 1;
  tern.protobuf.Uuid entered_sector_id = 2;
  SectorCrossingType sector_crossing_type = 3;
};

enum PointOfInterestType
{
  POINT_OF_INTEREST_TYPE_NOT_SET = 0;
  POINT_OF_INTEREST_TYPE_PASSING_TIME = 1;
  POINT_OF_INTEREST_TYPE_TOP_OF_DESCENT = 2;
  POINT_OF_INTEREST_TYPE_TOP_OF_CLIMB = 3;
  POINT_OF_INTEREST_TYPE_SID_EXIT = 4;
  POINT_OF_INTEREST_TYPE_STAR_ENTRY = 5;
  POINT_OF_INTEREST_TYPE_COORDINATION_POINT = 6;
  /** Crossing point between two areas of responsibility. */
  POINT_OF_INTEREST_TYPE_BOUNDARY_CROSSING = 7;
  /** Crossing point between two controlling sectors within a single area of responsibility. */
  POINT_OF_INTEREST_TYPE_HANDOVER_POINT = 8;
  /** Subsector-to-subsector crossing point between two ComplexAirspaceVolumes within an AreaOfInterest. */
  POINT_OF_INTEREST_TYPE_SECTOR_CROSSING = 9;
};

// The AirborneInitializationPoint contains the initial conditions (LatLon, heading, altitude/flight level
// and speed) of a flight which is airborne. This can be due to surveillance or position reports available.
message AirborneInitializationPoint
{
  tern.protobuf.math.LatLon latLon = 1;
  tern.protobuf.math.geometry.TrueBearing heading = 2;
  tern.protobuf.math.geometry.VerticalVariant vertical_variant = 3;
  tern.protobuf.math.SpeedVariant speed_variant = 4;
};
