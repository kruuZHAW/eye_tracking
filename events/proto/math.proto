syntax = "proto3";

import "configuration-editor-options.proto";

package tern.protobuf.math;

// Ground speed as metres per second
message GroundSpeed {
   option (tern.protobuf.aeronautical.excludeFromTree) = true;
   double metres_per_second = 1; // m/s
}

// Indicated airspeed as metres per second
message IndicatedAirspeed {
   option (tern.protobuf.aeronautical.excludeFromTree) = true;
   double metres_per_second = 1; // m/s
}

// True airspeed as metres per second
message TrueAirspeed {
   option (tern.protobuf.aeronautical.excludeFromTree) = true;
   double metres_per_second = 1; // m/s
}

// Mach as a mach value
message Mach {
   option (tern.protobuf.aeronautical.excludeFromTree) = true;
   double mach_value = 1; // mach value
}

// A speed variant containing a speed of a certain type
message SpeedVariant {
   oneof speed {
      GroundSpeed ground_speed = 1;
      IndicatedAirspeed indicated_airspeed = 2;
      TrueAirspeed true_airspeed = 3;
      Mach mach = 4;
   }
}

// Latitude of a position
message Latitude {
   option (tern.protobuf.aeronautical.excludeFromTree) = true;
   double degrees = 1 [(tern.protobuf.aeronautical.label) = "Latitude degrees", (tern.protobuf.aeronautical.unit)="°",
      (tern.protobuf.aeronautical.validation)="number", (tern.protobuf.aeronautical.rangeFromIncluding) = -90, (tern.protobuf.aeronautical.rangeToIncluding) = 90];
}

// Longitude of a position
message Longitude {
   option (tern.protobuf.aeronautical.excludeFromTree) = true;
   double degrees = 1 [(tern.protobuf.aeronautical.label) = "Longitude degrees", (tern.protobuf.aeronautical.unit)="°",
      (tern.protobuf.aeronautical.validation)="number", (tern.protobuf.aeronautical.rangeFromIncluding) = -180, (tern.protobuf.aeronautical.rangeToIncluding) = 180];
}

//Latitude and Longitude coordinates
message LatLon {
   option (tern.protobuf.aeronautical.excludeFromTree) = true;
   Latitude latitude = 1 [(tern.protobuf.aeronautical.label) = "Latitude"];
   Longitude longitude = 2 [(tern.protobuf.aeronautical.label) = "Longitude"];
}

// Distance
message Distance {
   option (tern.protobuf.aeronautical.excludeFromTree) = true;
   double metres = 1 [(tern.protobuf.aeronautical.unit) = "m", (tern.protobuf.aeronautical.rangeFromIncluding) = 0];
}

// Magnetic bearing
message MagneticBearing {
   option (tern.protobuf.aeronautical.excludeFromTree) = true;
   double degrees = 1 [(tern.protobuf.aeronautical.unit) = "°"];
}

// Vertical rate
message VerticalRate {
   double metres_per_second = 1; // m/s
}
