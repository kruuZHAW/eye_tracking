syntax = "proto3";

package tern.asd.events;

import "google/protobuf/timestamp.proto";

message Event {
  google.protobuf.Timestamp timestamp = 1;
  oneof event {
    MousePosition mouse_position = 2;
    TrackLabelPosition track_label_position = 3;
    TrackScreenPosition track_screen_position = 4;
    Clearance clearance = 5;
    Popup popup = 6;
    Transfer transfer = 7;
    SepTool sep_tool = 8;
    DistanceMeasurement distance_measurement = 9;
    SpeedVector speed_vector = 10;
    TrackMark track_mark = 11;
    RouteInteraction route_interaction = 12;
    KeyboardShortcut keyboard_shortcut = 13;
  }
}

message FlightIdentifier {
  string uuid = 1;
  uint32 track_number = 2;
  string callsign = 3;
}

message MousePosition {
  int32 x = 1;
  int32 y = 2;
}

message TrackLabelPosition {
  uint32 track_number = 1;
  int32 x = 2;
  int32 y = 3;
  int32 width = 4;
  int32 height = 5;
  bool visible = 6;
  bool hovered = 7;
  bool selected = 8;
  bool on_pip = 9;
  FlightIdentifier flight_id = 10;
}

message TrackScreenPosition {
  uint32 track_number = 1;
  int32 x = 2;
  int32 y = 3;
  bool visible = 6;
  FlightIdentifier flight_id = 7;
}

message Clearance {
  uint32 track_number = 1;
  string clearance_type = 2;
  string clearance = 3;
  FlightIdentifier flight_id = 4;
}

message Popup {
  uint32 track_number = 3;
  string name = 1;
  bool opened = 2;
  FlightIdentifier flight_id = 4;
}

enum TransferType {
  TRANSFER_TYPE_NOT_SET = 0;
  TRANSFER = 1;
  ASSUME = 2;
  FORCE_ASSUME = 3;
  RELEASE = 4;
  REJECT_TRANSFER = 5;
  REQUEST_TRANSFER = 6;
  CANCEL_TRANSFER = 7;
  ACTIVATE_NEXT_SECTOR = 8;
  FORCE_ACT = 9;
  DECONTROL = 10;
  TRANSFER_TO_NEXT_SECTOR = 11;
  FORCE_RELEASE = 12;
  ENABLE_AUTO_CONTROL = 13;
  TRANSFER_TO_ANY = 14;
  MANUAL_OUTBOUND = 15;
  MANUAL_INBOUND = 16;
}

message Transfer {
  uint32 track_number = 1;
  TransferType transfer_type = 2;
  FlightIdentifier flight_id = 3;
}

enum SepToolType {
  SEP_TOOL_TYPE_NOT_SET = 0;
  A = 1;
  B = 2;
  C = 3;
  D = 4;
}

message SepTool {
  oneof state {
    SepToolOpened opened = 1;
    SepToolConnected connected = 2;
    bool closed = 3;
  }
  SepToolType type = 4;
  uint32 measurement_id = 5;
}

message SepToolOpened {
  uint32 track_number = 1;
  FlightIdentifier flight_id = 2;
}

message SepToolConnected {
  uint32 track_number_1 = 1;
  uint32 track_number_2 = 2;
  FlightIdentifier flight_id_1 = 3;
  FlightIdentifier flight_id_2 = 4;
}

message DistanceMeasurement {
  oneof change {
    DistanceMeasurementAdded added = 1;
    DistanceMeasurementRemoved removed = 2;
    DistanceMeasurementPositionUpdated position_updated = 3;
  }
}

message DistanceMeasurementAdded {
  uint32 measurement_id = 1;
  MeasurementPoint first = 2;
  MeasurementPoint second = 3;
}

message ScreenPoint {
  int32 x = 1;
  int32 y = 2;
}

message DistanceMeasurementPositionUpdated {
  uint32 measurement_id = 1;
  ScreenPoint start = 2;
  ScreenPoint end = 3;
}

message DistanceMeasurementRemoved {
  uint32 measurement_id = 1;
}

message MeasurementPoint {
  uint32 track_number = 2;
  oneof kind {
    LatLon lat_lon = 1;
    FlightIdentifier flight_id = 3;
  }
}

message LatLon {
  double lat_deg = 1;
  double lon_deg = 2;
}

message SpeedVector {
  oneof update {
    SpeedVectorModeUpdated mode_updated = 1;
    SpeedVectorVisibility visibility = 2;
    SpeedVectorLength length = 3;
  }
}

enum SpeedVectorMode {
  SPEED_VECTOR_MODE_UNKNOWN = 0;
  SPEED_VECTOR_MODE_ALL_OFF = 1;
  SPEED_VECTOR_MODE_ALL_ON = 2;
  SPEED_VECTOR_MODE_SELECTED = 3;
}

message SpeedVectorModeUpdated {
  SpeedVectorMode mode = 1;
}

message SpeedVectorVisibility {
  uint32 track_number = 2;
  bool visible = 1;
  FlightIdentifier flight_id = 3;
}

message SpeedVectorLength {
  int32 length_seconds = 1;
}

message TrackMark {
  uint32 track_number = 1;
  MarkType mark_type = 2;
  MarkVariant mark_variant = 3;
  string mark_scope = 4;
  bool mark_set = 5;
  FlightIdentifier flight_id = 6;
}

enum MarkType {
  MARK_TYPE_NOT_SET = 0;
  FIRST_TYPE = 1;
  SECOND_TYPE = 2;
  THIRD_TYPE = 3;
  FOURTH_TYPE = 4;
}

enum MarkVariant {
  MARK_VARIANT_NOT_SET = 0;
  FIRST_VARIANT = 1;
  SECOND_VARIANT = 2;
  THIRD_VARIANT = 3;
}

message RouteInteraction {
  FlightIdentifier flight_id = 1;
  RouteInteractionType action_type = 2;
  string value = 3;
}

enum RouteInteractionType {
  ROUTE_INTERACTION_TYPE_NOT_SET = 0;
  POINT_SELECTED = 1;
  POINT_DESELECTED = 2;
  POINT_ADDED = 3;
  POINT_REMOVED = 4;
  DIRECT_TO = 5;
  DRAG_STARTED = 6;
  DRAG_ENDED = 7;
  CHANGES_APPLIED = 8;
  CHANGES_CANCELLED = 9;
}

message KeyboardShortcut {
  string action_name = 1;
}
